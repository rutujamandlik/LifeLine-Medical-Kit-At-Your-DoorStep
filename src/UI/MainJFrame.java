/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import UI.Customer.RegistrationJPanel;
import Business.DB4OUtil.DB4OUtil;
import Business.Distribution.Distribution;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.FDA.FDA;
import Business.Hospital.Hospital;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Pharmacy.Pharmacy;
import Business.UserAccount.UserAccount;
import Business.Warehouse.Warehouse;
import UI.Admin.AdminManageOptionsJPanel;
import static UI.Admin.AdminManageOptionsJPanel.system;
import UI.ApproveDoctor.ApproveDoctorOptionsJPanel;
import UI.ConsultDoctor.ConsultDoctorOptionsJPanel;
import UI.Customer.CustomerOptionsJPanel;
import UI.DeliveryPartner.DeliveryPartnerOptionJPanel;
import UI.DistributionEnterpriseAdmin.DistributionEnterpriseAdminOptionsJPanel;
import UI.FDA.FDAAdminOptionJPanel;
import UI.FDAEnterpriseAdmin.FDAEnterpriseManageOptionsJPanel;
import UI.HospitalEnterpriseAdmin.HospitalEnterpriseAdminOptionsJPanel;
import UI.LabAdmin.LabAdminOptionsJPanel;
import UI.LabTechnician.LabTechnicianOptionsJPanel;
import UI.Manager.ManagerOptionsJPanel;
import UI.Pharmacy.PharmacyOptionsJPanel;
import UI.PharmacyDelivery.PharmacyDeliveryAdminOptionsJPanel;
import UI.PharmacyEnterpriseAdmin.PharmacyEnterpriseAdminOptionsJPanel;
import UI.Shipping.ShippingOptionsJPanel;
import UI.WarehouseAdmin.WarehouseAdminOptionJPanel;
import UI.WarehouseEnterpriseAdmin.WarehouseOptionsJPanel;
import java.awt.CardLayout;
import java.awt.Image;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author milindsharma
 */
public class MainJFrame extends javax.swing.JFrame {

    private EcoSystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();

    /**
     * Creates new form MainJFrame
     */
    
    public static JPanel mainPanel;
    
    public MainJFrame() {
        initComponents();
        
        system = dB4OUtil.retrieveSystem();
        
        setLogo();
        setBackground();
        
        btnSignup.setOpaque(false);
        btnSignup.setContentAreaFilled(false);
        btnSignup.setBorderPainted(false);
        
        this.mainPanel = mainJPanel;
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        this.addWindowListener(new java.awt.event.WindowAdapter() {
    @Override
    public void windowClosing(java.awt.event.WindowEvent e) {
        DB4OUtil.getInstance().storeSystem(system);
        e.getWindow().dispose();
    }
});

        
    }
//    public void windowClosing(WindowEvent e) {
//    int i = JOptionPane.showConfirmDialog(MainJFrame.this, "do you really want to close?","test",JOptionPane.YES_NO_OPTION);
//    if(i == 0) {
//        System.exit(0);
//    }
//}
    
    public void clearTextFields() {
        txtUsername.setText("");
        txtPassword.setText("");
    }
    
    private void setLogo() {
        Image image = null;
        try {
            image = ImageIO.read(getClass().getResource("/UI/logo.png"));
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        Image scaledImg = image.getScaledInstance(120, 200, Image.SCALE_SMOOTH);
        ImageIcon icon = new ImageIcon(scaledImg);
        imgLogo.setIcon(icon);
    }
    
    private void setBackground() {
        
        Image image = null;
        try {
            image = ImageIO.read(getClass().getResource("/UI/login_bg.jpeg"));
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        Image scaledImg = image.getScaledInstance(1450, 960, Image.SCALE_SMOOTH);
        ImageIcon icon = new ImageIcon(scaledImg);
        System.out.println(icon);
        bgImage.setIcon(icon);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainJPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnSignup = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        imgLogo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        bgImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainJPanel.setLayout(new java.awt.CardLayout());

        jPanel3.setBackground(new java.awt.Color(79, 173, 177));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnSignup.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        btnSignup.setForeground(new java.awt.Color(0, 100, 255));
        btnSignup.setText("Sign up here!");
        btnSignup.setBorder(null);
        btnSignup.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnSignup.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnSignup.setOpaque(true);
        btnSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignupActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(153, 153, 0)));

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Username:");

        btnLogin.setBackground(new java.awt.Color(79, 173, 177));
        btnLogin.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(0, 0, 0));
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Password:");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Login");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPassword))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtPassword, txtUsername});

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Don't have an account? ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1)
                        .addGap(0, 0, 0)
                        .addComponent(btnSignup, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSignup, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(1030, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(131, 131, 131))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(bgImage, javax.swing.GroupLayout.PREFERRED_SIZE, 1540, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(2, 2, 2)
                    .addComponent(bgImage, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(185, Short.MAX_VALUE)))
        );

        mainJPanel.add(jPanel2, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mainJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        System.out.println(system.getUserAccountDirectory().getUserAccountList().size());
        if(txtUsername.getText().isEmpty() || txtPassword.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null,"Username and Password field's cannot be empty");
            return;
        }

//        else if (system.getUserAccountDirectory().authenticateUser(txtUsername.getText(), txtPassword.getText()) == null) {
//            JOptionPane.showMessageDialog(null,"Invalid UserName or Password");
//            return;
//        }

        UserAccount userAccount = system.getUserAccountDirectory().authenticateUser(txtUsername.getText(), txtPassword.getText());
        Enterprise inEnterprise=null;
        Organization inOrganization=null;
        Warehouse warehouse = null;
        String userName = txtUsername.getText();
        String password = txtPassword.getText();
        
        if(userAccount==null){
            //Step 2: Go inside each network and check each enterprise
            for(Network network:system.getNetworkList()){
                //Step 2.a: check against each enterprise
                for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseListArray()){
                    userAccount=enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                    if(userAccount==null){
                       //Step 3:check against each organization for each enterprise
                       for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList()){
                           userAccount=organization.getUserAccountDirectory().authenticateUser(userName, password);
                           if(userAccount!=null){
                               inEnterprise=enterprise;
                               inOrganization=organization;
                               break;
                           }
                       }
                       
                        
                    }
                    else{
                       inEnterprise=enterprise;
                       break;
                    }
                    if(inOrganization!=null){
                        break;
                    }  
                }
                
                if(inEnterprise!=null){
                    break;
                }
            }
        }
        
        if(userAccount==null){
            for(Network network:system.getNetworkList()){
                for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseListArray()){
                    if(enterprise.getHospitalDirectory()!=null){
//                        System.out.println(enterprise.getHospitalDirectory().getHospitals()+" --hos");
                        for(Hospital hospital: enterprise.getHospitalDirectory().getHospitalsArray()){
                            userAccount = hospital.getUserAccountDirectory().authenticateUser(userName, password);
                            System.out.println(userAccount);
                            if(userAccount!=null){
                                System.out.println(userAccount+"  -0-0-0-");
                                inEnterprise=enterprise;
                                inOrganization=null;
                                break;
                            }
                        }
                    }
                }
            }
        }
        
        if(userAccount==null){
            for(Network network:system.getNetworkList()){
                for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseListArray()){
                    if(enterprise.getWarehouseDirectory()!=null){
//                        System.out.println(enterprise.getManufacturingWarehouseDirectory().getWarehousedirectory());
                        for(Warehouse hospital: enterprise.getWarehouseDirectory().getWarehouseDirectoryArray()){
                            userAccount = hospital.getUserAccountDirectory().authenticateUser(userName, password);
                            System.out.println(enterprise.getName());
                            if(userAccount!=null){
                                inEnterprise=enterprise;
                                inOrganization=null;
                                warehouse = hospital;
                                break;
                            }
                        }
                    }
                }
            }
        }
        
        if(userAccount==null){
            for(Network network:system.getNetworkList()){
                for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseListArray()){
                    if(enterprise.getDistributionDirectory()!=null){
                        for(Distribution hospital: enterprise.getDistributionDirectory().getDistributionsArray()){
                            userAccount = hospital.getUserAccountDirectory().authenticateUser(userName, password);
                            System.out.println(enterprise.getName());
                            if(userAccount!=null){
                                inEnterprise=enterprise;
                                inOrganization=null;
                                break;
                            }
                        }
                    }
                }
            }
        }
        
        if(userAccount==null){
            for(Network network:system.getNetworkList()){
                for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseListArray()){
                    if(enterprise.getPharmacyDirectory()!=null){
                        for(Pharmacy hospital: enterprise.getPharmacyDirectory().getPharmacyStoresArray()){
                            userAccount = hospital.getUserAccountDirectory().authenticateUser(userName, password);
                            if(userAccount!=null){
                                inEnterprise=enterprise;
                                inOrganization=null;
                                break;
                            }
                        }
                    }
                }
            }
        }
        
        if(userAccount==null){
            for(Network network:system.getNetworkList()){
                for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseListArray()){
                    if(enterprise.getFdas()!=null){
                        for(FDA fda: enterprise.getFdas().getFDA()){
                            userAccount = fda.getUserAccountDirectory().authenticateUser(userName, password);
                            if(userAccount!=null){
                                inEnterprise=enterprise;
                                inOrganization=null;
                                break;
                            }
                        }
                    }
                }
            }
        }
        
        
//        System.out.println(userAccount.getRole().toString());
        
        if (userAccount != null) {
            navigateAfterLogin(userAccount, inEnterprise, warehouse);
        } else {
            JOptionPane.showMessageDialog(null, "Invalid UserName or Password", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        clearTextFields();
    }//GEN-LAST:event_btnLoginActionPerformed

    private void navigateAfterLogin(UserAccount userAccount, Enterprise enterprise, Warehouse warehouse) {
        
        switch (userAccount.getRole().toString()) {
            case "Business.Role.SystemAdminRole":
                AdminManageOptionsJPanel adminManageOptionsJPanel = new AdminManageOptionsJPanel(system);
                mainJPanel.add("AdminManageOptionsJPanel", adminManageOptionsJPanel);
                break;
                
            case "Customer":
                CustomerOptionsJPanel customerOptionsJPanel = new CustomerOptionsJPanel(userAccount, system);
                mainJPanel.add("CustomerOptionsJPanel", customerOptionsJPanel);
                break;
                
            case "Hospital Enterprise Admin":
                HospitalEnterpriseAdminOptionsJPanel hostpitalEnterpriseAdminOptionsJPanel = new HospitalEnterpriseAdminOptionsJPanel(system, enterprise);
                mainJPanel.add("HospitalEnterpriseAdminOptionsJPanel", hostpitalEnterpriseAdminOptionsJPanel);
                break;
                
            case "Manufacturing Enterprise Admin":
                WarehouseOptionsJPanel WwrehouseOptionsJPanel = new WarehouseOptionsJPanel(system, enterprise);
                mainJPanel.add("WarehouseOptionsJPanel", WwrehouseOptionsJPanel);
                break;
                
            case "Distribution Enterprise Admin":
                DistributionEnterpriseAdminOptionsJPanel distributionEnterpriseAdminOptionsJPanel = new DistributionEnterpriseAdminOptionsJPanel(system, enterprise);
                mainJPanel.add("DistributionEnterpriseAdminOptionsJPanel", distributionEnterpriseAdminOptionsJPanel);
                break;
                
            case "FDA Enterprise Admin":
                FDAEnterpriseManageOptionsJPanel fdaEnterpriseManageOptionsJPanel = new FDAEnterpriseManageOptionsJPanel(system, enterprise);
                mainJPanel.add("FDAEnterpriseManageOptionsJPanel", fdaEnterpriseManageOptionsJPanel);
                break;
                
            case "Pharmacy Enterprise Admin":
                PharmacyEnterpriseAdminOptionsJPanel pharmacyEnterpriseAdminOptionsJPanel = new PharmacyEnterpriseAdminOptionsJPanel(system, enterprise);
                mainJPanel.add("PharmacyEnterpriseAdminOptionsJPanel", pharmacyEnterpriseAdminOptionsJPanel);
                break;
                
            case "Manufacturing Admin":
                WarehouseAdminOptionJPanel warehouseAdminOptionsJPanel = new WarehouseAdminOptionJPanel(system, userAccount, warehouse);
                mainJPanel.add("WarehouseAdminOptionJPanel", warehouseAdminOptionsJPanel);
                break;

            case "Shipping Partner":
                ShippingOptionsJPanel shippingOptionsJPanel = new ShippingOptionsJPanel(system, userAccount, warehouse);
                mainJPanel.add("ShippingOptionsJPanel", shippingOptionsJPanel);
                break;
                
            case "Manager":
                ManagerOptionsJPanel managerOptionsJPanel = new ManagerOptionsJPanel(system, enterprise, userAccount);
                mainJPanel.add("ManagerOptionsJPanel", managerOptionsJPanel);
                break;
                
            case "FDA Admin":
                FDAAdminOptionJPanel fdaAdminOptionsJPanel = new FDAAdminOptionJPanel(system, enterprise, userAccount);
                mainJPanel.add("FDAAdminOptionJPanel", fdaAdminOptionsJPanel);
                break;
                
            case "Pharmacy Delivery Man":
                PharmacyDeliveryAdminOptionsJPanel pharmacyDeliveryAdminOptionJPanel = new PharmacyDeliveryAdminOptionsJPanel(system, userAccount, enterprise);
                mainJPanel.add("PharmacyDeliveryAdminOptionJPanel", pharmacyDeliveryAdminOptionJPanel);
                break;
                
            case "Home Delivery Man":
                DeliveryPartnerOptionJPanel deliveryPartnerOptionsJPanel = new DeliveryPartnerOptionJPanel(system, userAccount, enterprise);
                mainJPanel.add("DeliveryPartnerOptionJPanel", deliveryPartnerOptionsJPanel);
                break;
                
            case "Approving Doctor":
                ApproveDoctorOptionsJPanel approveDoctorOptionsJPanel = new ApproveDoctorOptionsJPanel(system, userAccount, enterprise);
                mainJPanel.add("ApproveDoctorOptionsJPanel", approveDoctorOptionsJPanel);
                break;
                
            case "Consulting Doctor":
                ConsultDoctorOptionsJPanel consultDoctorOptionsJPanel = new ConsultDoctorOptionsJPanel(system, userAccount, enterprise);
                mainJPanel.add("ConsultDoctorOptionsJPanel", consultDoctorOptionsJPanel);
                break;
                
            case "Lab Technician":
                LabTechnicianOptionsJPanel labTechnicianOptionsJPanel = new LabTechnicianOptionsJPanel(system, userAccount, enterprise);
                mainJPanel.add("LabTechnicianOptionsJPanel", labTechnicianOptionsJPanel);
                break;
                
            case "Lab Admin":
                LabAdminOptionsJPanel labAdminOptionsJPanel = new LabAdminOptionsJPanel(system, userAccount, enterprise);
                mainJPanel.add("LabAdminOptionsJPanel", labAdminOptionsJPanel);
                break;
                
            case "Pharmacy Admin":
                PharmacyOptionsJPanel pharmacyOptionsJPanel = new PharmacyOptionsJPanel(system, userAccount, enterprise);
                mainJPanel.add("PharmacyOptionsJPanel", pharmacyOptionsJPanel);
                break;
        }
        
        CardLayout layout = (CardLayout)mainJPanel.getLayout();
        layout.next(mainJPanel);

    }
    
    private void btnSignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignupActionPerformed
        // TODO add your handling code here:
        
        RegistrationJPanel registrationPanel = new RegistrationJPanel(system);
        mainJPanel.add("RegistrationJPanel", registrationPanel);
        CardLayout layout = (CardLayout)mainJPanel.getLayout();
        layout.next(mainJPanel);
    }//GEN-LAST:event_btnSignupActionPerformed
// cgfgb
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgImage;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnSignup;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel mainJPanel;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
